- content_for :page_title do
  = t('directories.explore_mastodon', title: site_title)

- content_for :header_tags do
  %meta{ name: 'description', content: t('directories.explanation') }

  = opengraph 'og:site_name', t('about.hosted_on', domain: site_hostname)
  = opengraph 'og:type', 'website'
  = opengraph 'og:title', t('directories.explore_mastodon', title: site_title)
  = opengraph 'og:description', t('directories.explanation')
  = opengraph 'og:image', File.join(root_url, 'android-chrome-192x192.png')

.page-header
  %h1= t('directories.explore_mastodon', title: site_title)
  %p= t('directories.explanation')

- if @accounts.empty?
  = nothing_here
- else
  .directory__list
    - @accounts.each do |account|
      .account-card
        = link_to TagManager.instance.url_for(account), class: 'account-card__permalink' do
          .account-card__header
            = image_tag account.header.url, alt: ''
          .account-card__title
            .account-card__title__avatar
              = image_tag account.avatar.url, alt: ''
            .display-name
              %bdi
                %strong.emojify.p-name= display_name(account, custom_emojify: true)
              %span
                = acct(account)
                = fa_icon('lock') if account.locked?
        - if account.note.present?
          .account-card__bio.emojify
            = prerender_custom_emojis(account_bio_format(account), account.emojis)
        - else
          .flex-spacer
        .account-card__actions
          .account-card__counters
            .account-card__counters__item
              = friendly_number_to_human account.statuses_count
              %small= t('accounts.posts', count: account.statuses_count).downcase
            .account-card__counters__item
              = hide_followers_count?(account) ? '-' : (friendly_number_to_human account.followers_count)
              %small= t('accounts.followers', count: account.followers_count).downcase
            .account-card__counters__item
              = friendly_number_to_human account.following_count
              %small= t('accounts.following', count: account.following_count).downcase
          .account-card__actions__button
            = account_action_button(account)

  = paginate @accounts

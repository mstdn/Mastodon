.detailed-status.detailed-status--flex{ class: "detailed-status-#{status.visibility}" }
  .p-author.h-card
    = link_to ActivityPub::TagManager.instance.url_for(status.account), class: 'detailed-status__display-name u-url', target: stream_link_target, rel: 'noopener' do
      .detailed-status__display-avatar
        - if prefers_autoplay?
          = image_tag status.account.avatar_original_url, alt: '', class: 'account__avatar u-photo'
        - else
          = image_tag status.account.avatar_static_url, alt: '', class: 'account__avatar u-photo'
      %span.display-name
        %bdi
          %strong.display-name__html.p-name.emojify= display_name(status.account, custom_emojify: true, autoplay: prefers_autoplay?)
        %span.display-name__account
          = acct(status.account)
          = fa_icon('lock') if status.account.locked?

  = account_action_button(status.account)

  .status__content.emojify{ :data => ({ spoiler: current_account&.user&.setting_expand_spoilers ? 'expanded' : 'folded' } if status.spoiler_text?) }<
    - if status.spoiler_text?
      %p<
        %span.p-summary> #{Formatter.instance.format_spoiler(status, autoplay: prefers_autoplay?)}&nbsp;
        %button.status__content__spoiler-link= t('statuses.show_more')
    .e-content
      = Formatter.instance.format(status, custom_emojify: true, autoplay: prefers_autoplay?)
      - if status.preloadable_poll
        = render_poll_component(status)

  - if !status.media_attachments.empty?
    - if status.media_attachments.first.video?
      = render_video_component(status, width: 670, height: 380, detailed: true)
    - elsif status.media_attachments.first.audio?
      = render_audio_component(status, width: 670, height: 380)
    - else
      = render_media_gallery_component(status, height: 380, standalone: true)
  - elsif status.preview_card
    = render_card_component(status)

  .detailed-status__meta
    %data.dt-published{ value: status.created_at.to_time.iso8601 }
    - if status.edited?
      %data.dt-updated{ value: status.edited_at.to_time.iso8601 }

    = link_to ActivityPub::TagManager.instance.url_for(status), class: 'detailed-status__datetime u-url u-uid', target: stream_link_target, rel: 'noopener noreferrer' do
      %time.formatted{ datetime: status.created_at.iso8601, title: l(status.created_at) }= l(status.created_at)
    ·
    - if status.edited?
      = t('statuses.edited_at', date: l(status.edited_at))
      ·
    %span.detailed-status__visibility-icon
      = visibility_icon status
    ·
    - if status.application && @account.user&.setting_show_application
      - if status.application.website.blank?
        %strong.detailed-status__application= status.application.name
      - else
        = link_to status.application.name, status.application.website, class: 'detailed-status__application', target: '_blank', rel: 'noopener noreferrer'
      ·
    = link_to remote_interaction_path(status, type: :reply), class: 'modal-button detailed-status__link' do
      - if status.in_reply_to_id.nil?
        = fa_icon('reply')
      - else
        = fa_icon('reply-all')
      %span.detailed-status__reblogs>= friendly_number_to_human status.replies_count
      = " "
    ·
    - if status.public_visibility? || status.unlisted_visibility?
      = link_to remote_interaction_path(status, type: :reblog), class: 'modal-button detailed-status__link' do
        = fa_icon('retweet')
        %span.detailed-status__reblogs>= friendly_number_to_human status.reblogs_count
        = " "
      ·
    = link_to remote_interaction_path(status, type: :favourite), class: 'modal-button detailed-status__link' do
      = fa_icon('star')
      %span.detailed-status__favorites>= friendly_number_to_human status.favourites_count
      = " "

    - if user_signed_in?
      ·
      = link_to t('statuses.open_in_web'), web_url("statuses/#{status.id}"), class: 'detailed-status__application', target: '_blank'
